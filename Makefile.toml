[env]
DOCKER_BUILD_TAG = "joey_mckenzie_tech"
PORT = 8080

[tasks.run]
env_files = [".env"]
install_crate = "cargo-watch"
command = "cargo"
args = ["watch", "-x", "run"]

[tasks.build]
env_files = [".env"]
command = "cargo"
args = ["build", "--release"]

[tasks.styles]
# command = "bash"
# args = ["-c", "scripts/script.sh watch"]
command = "npx"
args = [
  "tailwindcss",
  "-i",
  "${CARGO_MAKE_WORKING_DIRECTORY}/styles/globals.css",
  "-o",
  "${CARGO_MAKE_WORKING_DIRECTORY}/assets/css/main.min.css",
  "--minify",
  "--watch",
]

[tasks.prepare]
install_crate = "cargo-chef"
command = "cargo"
args = ["+nightly", "chef", "prepare", "--recipe-path", "recipe.json"]

[tasks.hooks]
command = "precommit"
args = ["autoupdate"]

[tasks.docker-build]
command = "docker"
env_files = [".env"]
args = [
  "build",
  ".",
  "--build-arg",
  "SPOTIFY_REFRESH_TOKEN=${SPOTIFY_REFRESH_TOKEN}",
  "--build-arg",
  "SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}",
  "--build-arg",
  "SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}",
  "--build-arg",
  "DATABASE_URL=${DATABASE_URL}",
  "--build-arg",
  "RUST_ENV=${RUST_ENV}",
  "--build-arg",
  "PORT=${PORT}",
  "-t",
  "${DOCKER_BUILD_TAG}",
]

[tasks.docker-run]
command = "docker"
env_files = [".env"]
args = [
  "run",
  "-d",
  "-p",
  "${PORT}:${PORT}",
  "--name",
  "${DOCKER_BUILD_TAG}",
  "-it",
  "${DOCKER_BUILD_TAG}",
]

[tasks.docker-stop]
command = "docker"
args = ["stop", "${DOCKER_BUILD_TAG}"]

[tasks.docker-rm]
command = "docker"
args = ["rm", "${DOCKER_BUILD_TAG}"]

[tasks.docker-start]
command = "docker"
args = ["start", "${DOCKER_BUILD_TAG}"]

[tasks.docker-init]
dependencies = ["docker-build", "docker-run"]

[tasks.docker-reinit]
dependencies = ["docker-stop", "docker-rm", "docker-init"]
